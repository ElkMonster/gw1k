#ifndef GW1K_GW1KCONSTANTS_H_
#define GW1K_GW1KCONSTANTS_H_


namespace gw1k
{


enum StateEvent { GW1K_PRESSED, GW1K_REPEATED, GW1K_RELEASED };

enum MouseButton {
    GW1K_MB_LEFT,
    GW1K_MB_RIGHT,
    GW1K_MB_MIDDLE,
    GW1K_MB_OTHER,
    GW1K_MB_UNDEFINED
};

enum MouseMovedEvent { GW1K_M_ENTERED, GW1K_M_HOVERED, GW1K_M_LEFT };

enum KeyCode {
	GW1K_KEY_SPACE = 256,
	GW1K_KEY_ESC,
	GW1K_KEY_UP,
	GW1K_KEY_DOWN,
	GW1K_KEY_LEFT,
	GW1K_KEY_RIGHT,
	GW1K_KEY_LSHIFT,
	GW1K_KEY_RSHIFT,
	GW1K_KEY_LCTRL,
	GW1K_KEY_RCTRL,
	GW1K_KEY_LALT,
	GW1K_KEY_RALT,
	GW1K_KEY_LSUPER,
	GW1K_KEY_RSUPER,
	GW1K_KEY_TAB,
	GW1K_KEY_ENTER,
	GW1K_KEY_BACKSPACE,
	GW1K_KEY_INSERT,
	GW1K_KEY_DEL,
	GW1K_KEY_PAGEUP,
	GW1K_KEY_PAGEDOWN,
	GW1K_KEY_HOME,
	GW1K_KEY_END,
	GW1K_KEY_KP_0,
	GW1K_KEY_KP_1,
	GW1K_KEY_KP_2,
	GW1K_KEY_KP_3,
	GW1K_KEY_KP_4,
	GW1K_KEY_KP_5,
	GW1K_KEY_KP_6,
	GW1K_KEY_KP_7,
	GW1K_KEY_KP_8,
	GW1K_KEY_KP_9,
	GW1K_KEY_KP_DIVIDE,
	GW1K_KEY_KP_MULTIPLY,
	GW1K_KEY_KP_SUBTRACT,
	GW1K_KEY_KP_ADD,
	GW1K_KEY_KP_DECIMAL,
	GW1K_KEY_KP_EQUAL,
	GW1K_KEY_KP_ENTER,
	GW1K_KEY_KP_NUM_LOCK,
	GW1K_KEY_CAPS_LOCK,
	GW1K_KEY_SCROLL_LOCK,
	GW1K_KEY_PAUSE,
	GW1K_KEY_MENU,
	GW1K_KEY_F1,
	GW1K_KEY_F2,
	GW1K_KEY_F3,
	GW1K_KEY_F4,
	GW1K_KEY_F5,
	GW1K_KEY_F6,
	GW1K_KEY_F7,
	GW1K_KEY_F8,
	GW1K_KEY_F9,
	GW1K_KEY_F10,
	GW1K_KEY_F11,
	GW1K_KEY_F12,
	GW1K_KEY_OTHER = -1
};


enum TextProperty {
    GW1K_ALIGN_LEFT = 1,
    GW1K_ALIGN_CENTER = 2,
    GW1K_ALIGN_RIGHT = 4,
    GW1K_ALIGN_JUSTIFY = 8,
    GW1K_ALIGN_TOP = 16,
    GW1K_ALIGN_VERT_CENTER = 32,
    GW1K_ALIGN_BOTTOM = 64
};


/**
 * Provides constants for eight possible orientations. The constants
 * values express the orientation as a time on the clock. E.g., GW1K_TOP's
 * value is 1200 (12 o'clock).
 */
enum Orientation {
    GW1K_TOP = 1200,
    GW1K_TOPRIGHT = 130,
    GW1K_RIGHT = 300,
    GW1K_BOTTOMRIGHT = 450,
    GW1K_BOTTOM = 600,
    GW1K_BOTTOMLEFT = 730,
    GW1K_LEFT = 900,
    GW1K_TOPLEFT = 1030
};


} // namespace gw1k

#endif // GW1K_GW1KCONSTANTS_H_
